# -*- coding: utf-8 -*-
"""Apple_Database_Generation_Random.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LPRUzG0_VhKiTbgZYan5ZJ1xzrVwMqMi
"""

import pandas as pd
import random

# Generate 1500 rows of data for the 'Model' column
model_choices = ['iPhone ' + str(i) if i != 10 else 'iPhone X' for i in range(5, 16)]
models = random.choices(model_choices, k=1500)

def generate_unique_imei(existing_imeis):
    imei = ''.join(random.choices('0123456789', k=14))  # Generates a 14-digit random number
    if imei not in existing_imeis:
        return imei
    else:
        return generate_unique_imei(existing_imeis)

# Set to store unique serial numbers
unique_serial_numbers = set()

# Generate unique serial numbers
while len(unique_serial_numbers) < 1500:
    serial_number = random.randint(10000, 99999)
    unique_serial_numbers.add(serial_number)

# Convert the set to a list
serial_numbers = list(unique_serial_numbers)


# Generate unique IMEI numbers
existing_imeis = set()
data = {
    'Serial Number': serial_numbers,
    'Model': models,
    'IMEI': [],
    'Storage': [str(random.choice([64, 128, 256, 512])) + 'GB' for _ in range(1500)],
    'Operating_System': ['iOS ' + str(random.randint(10, 15)) for _ in range(1500)],  # iOS options from 10 to 15
    'Color': [random.choice(['Space Gray', 'Silver', 'Gold', 'Midnight Green', 'Rose Gold']) for _ in range(1500)],
    'Price': ['Â£' + str(random.randint(500, 1500)) for _ in range(1500)],
    'Release_Year': [random.randint(2010, 2023) for _ in range(1500)],
    'RAM': [str(random.choice([4, 6, 8, 12, 16])) + 'GB' for _ in range(1500)],
    'Battery_Capacity': [str(random.randint(2000, 5000)) + 'mAh' for _ in range(1500)],
    'Screen_Size': [random.uniform(4.5, 6.5) for _ in range(1500)],
    'Front_Camera_Megapixels': [random.choice([8, 12, 16, 20]) for _ in range(1500)],
    'Rear_Camera_Megapixels': [random.choice([12, 16, 20, 24, 32]) for _ in range(1500)],

}

for _ in range(1500):
    imei = generate_unique_imei(existing_imeis)
    existing_imeis.add(imei)
    data['IMEI'].append(imei)

# Create a DataFrame from the data
df = pd.DataFrame(data)

# Print the DataFrame
print(df)

# Saving the DataFrame to a CSV file
df.to_csv('apple_mobile_data.csv', index=False)

##########  Small Tables   ############

# Creating the first table with specified columns
table1_data = {
    'Serial Number': df['Serial Number'],
    'Model': df['Model'],
    'Operating_System': df['Operating_System'],
    'RAM': df['RAM']
}

# Creating a DataFrame for the first table
table1_df = pd.DataFrame(table1_data)
#table1_df.set_index('Serial Number', inplace=True)


# Printing the first table
print("Table 1:")
print(table1_df)

# Saving the first table to a CSV file
table1_df.to_csv('table1_data.csv', index=False)

#### Table 2

# Creating the second table with specified columns
table2_data = {
    'IMEI': [],
    'Serial Number': df['Serial Number'],
    'Color': df['Color'],
    'Release_Year': df['Release_Year']
}

# Set to store unique IMEI numbers for table2_data
existing_imeis_table2 = set()

# Generating unique IMEI numbers for table2_data
for _ in range(1500):
    imei = generate_unique_imei(existing_imeis_table2)
    existing_imeis_table2.add(imei)
    table2_data['IMEI'].append(imei)

# Creating a DataFrame for the second table
table2_df = pd.DataFrame(table2_data)

# Printing and saving the second table
print("\nTable 2:")
print(table2_df)
table2_df.to_csv('table2_data.csv', index=False)